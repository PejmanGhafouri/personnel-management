# Generated by Django 4.0.2 on 2022-03-26 17:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('name', models.CharField(choices=[('', '-------'), ('0', 'Ansar Bank'), ('1', 'Dey Bank'), ('2', 'Eghtesad Novin Bank'), ('3', 'Gardeshgari Bank'), ('4', 'Ghavamin Bank'), ('5', 'Hekmat Iranian Bank'), ('6', 'Iran Zamin Bank'), ('7', 'Karafarin Bank'), ('8', 'Khavarmianeh Bank'), ('9', 'Keshavarzi Bank'), ('10', 'Maskan Bank'), ('11', 'Mehr Iran Gharzolhasaneh Bank'), ('12', 'Melli Bank'), ('13', 'Mellat Bank'), ('14', 'Parsian Bank'), ('15', 'Pasargad Bank'), ('16', 'Post Bank'), ('17', 'Refah Bank'), ('18', 'Resalat Gharzolhasaneh Bank'), ('19', 'Saman Bank'), ('20', 'Sarmayeh Bank'), ('21', 'Shahr Bank'), ('22', 'Sepah Bank'), ('23', 'Sanat and Madan Bank'), ('24', 'Saderat Bank'), ('25', 'Sina Bank'), ('26', 'Toseh Taavon Bank'), ('27', 'Tejarat Bank')], max_length=2, verbose_name='Bank Name')),
                ('account_number', models.CharField(max_length=250, unique=True, verbose_name=' Account Number')),
                ('shaba_number', models.CharField(max_length=24, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid Shaba Number', regex='^\\d{24}$')], verbose_name='Shaba Number')),
                ('cart_number', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid Cart Number', regex='\\d{16}$')], verbose_name='Cart Number')),
            ],
            options={
                'verbose_name': 'Bank',
                'verbose_name_plural': 'Banks',
            },
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('birth_certificate_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Birth Certificate id')),
                ('national_id', models.CharField(blank=True, max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='invalid national id', regex='^[0-9]\\d{9}$|^[1-9]\\d{10}$')], verbose_name='National id')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('first_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/first_certificate_image', verbose_name='first page certificate image')),
                ('second_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/second_certificate_image', verbose_name='second page certificate image')),
                ('third_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/third_certificate_image', verbose_name='third page certificate image')),
                ('forth_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/forth_certificate_image', verbose_name='forth page certificate image')),
                ('fifth_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/fifth_certificate_image', verbose_name='fifth page certificate image')),
                ('front_identify_card_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/front_identify_card_image', verbose_name='front identify card image')),
                ('back_identify_card_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/back_identify_card_image', verbose_name='back identify card image')),
            ],
            options={
                'verbose_name': 'Child',
                'verbose_name_plural': 'Children',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('personnel_id', models.CharField(blank=True, max_length=250, null=True, verbose_name='Personnel ID')),
                ('status', models.CharField(choices=[('', '-------'), ('D', 'Draft'), ('A', 'Active'), ('I', 'Inactive'), ('P', 'Accepted'), ('R', 'REJECTED')], default='D', max_length=1, verbose_name='contract status')),
                ('term', models.CharField(choices=[('', '-------'), ('1', 'One Month'), ('3', 'Three Month'), ('6', 'Six Month'), ('9', 'Nine Month'), ('12', 'One Year')], max_length=2, verbose_name='contract term')),
                ('contract_type', models.CharField(choices=[('', '-------'), ('F', 'Full Time'), ('P', 'Part Time'), ('I', 'Internship')], max_length=1, verbose_name='contract type')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('money_obligation', models.PositiveIntegerField(verbose_name='money obligation')),
                ('minimum_working_hour', models.IntegerField(blank=True, null=True, verbose_name='minimum working hour')),
                ('insurance_status', models.CharField(choices=[('', '-------'), ('N', 'Normal'), ('R', 'RETIRED'), ('I', 'Insurance Employer'), ('P', 'Premium Insurance'), ('U', 'Unemployment Insurance')], max_length=1, verbose_name='Insurance Status')),
                ('insurance_name', models.CharField(choices=[('', '-------'), ('T', 'Tamin Ejtemaei Organization'), ('S', 'Salamat Organization'), ('N', 'Niroo Mosalah Organization')], max_length=250, verbose_name='Insurance Name')),
                ('insurance_branch_number', models.CharField(max_length=250, verbose_name='Insurance Branch Number')),
                ('insurance_number', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(message='invalid insurance number', regex='\\d{10}$')], verbose_name='Insurance Number')),
            ],
            options={
                'verbose_name': 'contract',
                'verbose_name_plural': 'contracts',
            },
        ),
        migrations.CreateModel(
            name='ContractComment',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('comment', models.TextField(verbose_name='comment')),
            ],
            options={
                'verbose_name': 'contract comment',
                'verbose_name_plural': 'contract comments',
            },
        ),
        migrations.CreateModel(
            name='DeleteDemand',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('delete_reason', models.TextField(verbose_name='delete_reason')),
            ],
            options={
                'verbose_name': 'Delete Demand',
                'verbose_name_plural': 'Delete Demands',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('level', models.CharField(choices=[('', '-------'), ('I', 'Illiterate'), ('S', 'Secondary Education'), ('O', 'Diploma'), ('A', 'Associate'), ('B', 'Bachelor'), ('M', 'Master'), ('D', 'Doctorate'), ('P', 'Post Doctoral')], default='', max_length=1, verbose_name='Level')),
                ('field', models.CharField(choices=[('', '-------'), ('AC', 'Accountancy'), ('CI', 'Civil Engineering'), ('CO', 'COMPUTER Technology'), ('EL', 'Electronics'), ('IN', 'Industrial Engineering'), ('ME', 'Mechanic Engineering')], default='', max_length=2, verbose_name='Field')),
                ('graduation_date', models.CharField(max_length=4, verbose_name='Graduation Date')),
                ('graduation_image', models.ImageField(upload_to='personnel/profile/graduation_image', verbose_name='Graduation Image')),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Educations',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('code', models.CharField(choices=[('0', 'All Permission'), ('1', 'View And Change User Data'), ('2', 'Accept demand for change users data'), ('3', 'Archive'), ('4', 'Delete Demand'), ('5', 'Accept Delete Demand')], max_length=1, verbose_name='code')),
            ],
            options={
                'verbose_name': 'permission',
                'verbose_name_plural': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('father_name', models.CharField(max_length=250, verbose_name='Father Name')),
                ('birth_certificate_id', models.CharField(max_length=50, verbose_name='Birth Certificate id')),
                ('birthdate', models.DateField(verbose_name='Birthdate')),
                ('first_page_certificate_image', models.ImageField(upload_to='personnel/profile/first_certificate_image', verbose_name='first page certificate image')),
                ('second_page_certificate_image', models.ImageField(upload_to='personnel/profile/second_certificate_image', verbose_name='second page certificate image')),
                ('third_page_certificate_image', models.ImageField(upload_to='personnel/profile/third_certificate_image', verbose_name='third page certificate image')),
                ('forth_page_certificate_image', models.ImageField(upload_to='personnel/profile/forth_certificate_image', verbose_name='forth page certificate image')),
                ('fifth_page_certificate_image', models.ImageField(upload_to='personnel/profile/fifth_certificate_image', verbose_name='fifth page certificate image')),
                ('front_identify_card_image', models.ImageField(upload_to='personnel/profile/front_identify_card_image', verbose_name='front identify card image')),
                ('back_identify_card_image', models.ImageField(upload_to='personnel/profile/back_identify_card_image', verbose_name='back identify card image')),
                ('military_service_status', models.CharField(choices=[('D', 'End Duty'), ('P', 'Permanent'), ('S', 'Soldier'), ('E', 'Education Exemption'), ('M', 'Medical Exemption'), ('N', 'Sponsorship Exemption')], max_length=1, verbose_name='Military Services Status')),
                ('military_service_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/military_service_image', verbose_name='military service image')),
                ('martial_status', models.CharField(choices=[('', '-------'), ('M', 'Married'), ('S', 'Single')], default='', max_length=1, verbose_name='Martial Status')),
                ('address', models.TextField(verbose_name='Address')),
                ('postal_code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='invalid postal code', regex='^[0-9]{10}$')], verbose_name='Postal Code')),
                ('telephone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='invalid telephone', regex='^0[0-9]{2,}[0-9]{7,}$')], verbose_name='Telephone')),
                ('emergency_telephone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='invalid emergency telephone', regex='^0[0-9]{2,}[0-9]{7,}$')], verbose_name='Emergency Telephone')),
                ('demand_status', models.CharField(choices=[('A', 'Accepted'), ('R', 'Rejected'), ('D', 'Draft')], default='D', max_length=1, verbose_name='Demand Status')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('title', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='title')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Spouse',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('birth_certificate_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Birth Certificate id')),
                ('national_id', models.CharField(blank=True, max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='invalid national id', regex='^[0-9]\\d{9}$|^[1-9]\\d{10}$')], verbose_name='National id')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('first_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/first_certificate_image', verbose_name='first page certificate image')),
                ('second_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/second_certificate_image', verbose_name='second page certificate image')),
                ('third_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/third_certificate_image', verbose_name='third page certificate image')),
                ('forth_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/forth_certificate_image', verbose_name='forth page certificate image')),
                ('fifth_page_certificate_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/fifth_certificate_image', verbose_name='fifth page certificate image')),
                ('front_identify_card_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/front_identify_card_image', verbose_name='front identify card image')),
                ('back_identify_card_image', models.ImageField(blank=True, null=True, upload_to='personnel/profile/back_identify_card_image', verbose_name='back identify card image')),
                ('father_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Father Name')),
            ],
            options={
                'verbose_name': 'Spouse',
                'verbose_name_plural': 'Spouses',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personnel.role', verbose_name='role')),
            ],
            options={
                'verbose_name': 'user role',
                'verbose_name_plural': 'user roles',
            },
        ),
    ]
